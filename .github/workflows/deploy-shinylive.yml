name: Deploy Shinylive App to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'
        use-public-rspm: true
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libarchive-dev
        
    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ hashFiles('**/renv.lock') }}-${{ hashFiles('**/.github/workflows/deploy-shinylive.yml') }}
        restore-keys: |
          ${{ runner.os }}-r-
          
    - name: Test shinylive installation
      run: |
        cat("Testing shinylive installation from CRAN...\n")
        tryCatch({
          install.packages("shinylive", repos = "https://cran.r-project.org")
          library(shinylive)
          cat("✓ shinylive installed successfully from CRAN\n")
        }, error = function(e) {
          cat("✗ shinylive not available on CRAN:", conditionMessage(e), "\n")
          quit(status = 1)
        })
      shell: Rscript {0}
      
    - name: Install other R dependencies
      run: |
        packages <- c("shiny", "shinydashboard", "plotly", "DT", "dplyr", "readr")
        for (pkg in packages) {
          if (!require(pkg, character.only = TRUE, quietly = TRUE)) {
            install.packages(pkg, repos = "https://cran.r-project.org")
          }
        }
      shell: Rscript {0}
      
    - name: Verify package installation
      run: |
        Rscript -e "
        required_packages <- c('shinylive', 'shiny', 'shinydashboard', 'plotly', 'DT', 'dplyr', 'readr')
        for (pkg in required_packages) {
          if (!require(pkg, character.only = TRUE)) {
            cat('ERROR: Package', pkg, 'not installed\\n')
            quit(status = 1)
          } else {
            cat('✓ Package', pkg, 'loaded successfully\\n')
          }
        }
        cat('All packages verified\\n')
        "
      
    - name: Verify data file exists
      run: |
        if [ ! -f "data/250707_data.csv" ]; then
          echo "Error: Data file not found"
          exit 1
        fi
        echo "Data file found: $(wc -l < data/250707_data.csv) lines"
        
    - name: Test Shiny app syntax
      run: |
        Rscript -e "
        cat('Testing Shiny app syntax...\\n')
        tryCatch({
          source('app.R', echo = FALSE)
          cat('✓ Shiny app syntax is valid\\n')
        }, error = function(e) {
          cat('✗ Syntax error:', conditionMessage(e), '\\n')
          quit(status = 1)
        })
        "
        
    - name: Export to Shinylive
      run: |
        Rscript -e "
        library(shinylive)
        cat('Converting Shiny app to Shinylive...\\n')
        shinylive::export('.', '_site')
        cat('✓ Shinylive export completed\\n')
        
        # Verify export
        if (dir.exists('_site')) {
          files <- list.files('_site', recursive = TRUE)
          cat('Generated files:', length(files), '\\n')
          cat('✓ Export successful\\n')
        } else {
          cat('✗ Export failed\\n')
          quit(status = 1)
        }
        "
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4